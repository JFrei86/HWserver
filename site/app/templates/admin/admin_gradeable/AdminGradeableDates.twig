<div id="gradeable-dates">
    <input name="g_ta_view_start_date" id="date_ta_view" class="date_picker" type="text" value="{{ admin_gradeable.getGTaViewStartDate() }}">
    TA Beta Testing Date (gradeable visible to TAs)

    <br />


    <div class="electronic_file">
        <div class="team_yes">
            <input name="eg_team_lock_date" id="date_team_lock" class="date_picker" type="text" value="{{ admin_gradeable.getEgTeamLockDate() }}">
            Team Lock Date (Instructors can still manually manage teams)

            <br />
        </div>

        <input id="date_submit" name="eg_submission_open_date" class="date_picker" type="text" value="{{ admin_gradeable.getEgSubmissionOpenDate() }}">
        Submission Open Date (submission available to students)

        <br />

        <input id="date_due" name="eg_submission_due_date" class="date_picker" type="text" value="{{ admin_gradeable.getEgSubmissionDueDate() }}">
        Due Date

        <br />
    </div>

    <div class="manual_grading">
        <input name="g_grade_start_date" id="date_grade" class="date_picker" type="text" value="{{ admin_gradeable.getGGradeStartDate() }}">
        TA/Instructor Manual Grading Open Date (graders may begin grading)

        <br />
    </div>

    <input name="g_grade_released_date" id="date_released" class="date_picker" type="text" value="{{ admin_gradeable.getGGradeReleasedDate() }}">
    Grades Released Date (grades will be visible to students)

    <br />

    <div class="electronic_file">
        How many late days may students use on this assignment?
        <input style="width: 50px" id="eg_late_days" name="eg_late_days" class="int_val" type="text" value="{{ admin_gradeable.getEgLateDays() }}"/>

        <br />
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function() {
        $(function() {
            $( ".date_picker" ).datetimepicker({
                dateFormat: 'yy-mm-dd',
                timeFormat: "HH:mm:ssz",
                showButtonPanel: true,
                showTimezone: false,
                showMillisec: false,
                showMicrosec: false,
                beforeShow: function( input ) {
                    setTimeout(function() {
                        var buttonPane = $( input )
                            .datepicker( "widget" )
                            .find( ".ui-datepicker-buttonpane" );

                        $( "<button>", {
                            text: "Infinity",
                            click: function() {
                                $.datepicker._curInst.input.datepicker('setDate', "9999-12-31 23:59:59-0400").datepicker('hide');
                            }
                        }).appendTo( buttonPane ).addClass("ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all");
                    }, 1 );
                }
            });
        });
    });

    function checkFormDates() {
        var date_ta_view = Date.parse($('#date_ta_view').val());
        var date_submit = Date.parse($('#date_submit').val());
        var date_due = Date.parse($('#date_due').val());
        var date_grade = Date.parse($('#date_grade').val());
        var date_released = Date.parse($('#date_released').val());

        var check1 = $('#radio_electronic_file').is(':checked');
        var check2 = $('#radio_checkpoints').is(':checked');
        var check3 = $('#radio_numeric').is(':checked');

        var eg_late_ms = $('#eg_late_days').val() * 86400000;

        if(check1) {
            if(date_submit < date_ta_view) {
                alert("DATE CONSISTENCY:  Submission Open Date must be >= TA Beta Testing Date");
                return false;
            }
            if(date_due < date_submit) {
                alert("DATE CONSISTENCY:  Due Date must be >= Submission Open Date");
                return false;
            }
        }

        // This value will always be consistent with the 'check' values since
        //  this data will not be changeable by the time the user navigates to this page.
        //      This case will only happen when 'check1' is T
        if ($('[name="eg_use_ta_grading"]').attr('value') === 'true') {
            if(date_grade < date_due) {
                alert("DATE CONSISTENCY:  TA/Instructor Manual Grading Open Date must be >= Due Date");
                return false;
            }
            else if(date_grade < date_due + eg_late_ms) {
                if(!confirm("DATE CONSISTENCY:  [Warning] TA/Instructor Manual Grading Open Date should be >= Due Date (+ max allowed late days).\n\nContinue anyway?"))
                    return false;
            }
            if(date_released < date_due) {
                alert("DATE CONSISTENCY:  Grades Released Date must be >= TA/Instructor Manual Grading Open Date");
                return false;
            }
        }
        else {
            if(check1) {
                if(date_released < date_due) {
                    alert("DATE CONSISTENCY:  Grades Released Date must be >= Due Date (+ max allowed late days)");
                    return false;
                }
            }
        }

        // This can happen when 'check2' or 'check3' are T (ta_grading is already T)
        if($('[name="eg_use_ta_grading"]').attr('value') === 'true' || check2 || check3) {
            if(date_grade < date_ta_view) {
                alert("DATE CONSISTENCY:  TA/Instructor Manual Grading Open Date must be >= TA Beta Testing Date");
                return false;
            }
            if(date_released < date_grade) {
                alert("DATE CONSISTENCY:  Grade Released Date must be >= TA/Instructor Manual Grading Open Date");
                return false;
            }
        }
    }

</script>