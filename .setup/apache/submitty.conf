<VirtualHost __your_domain__:80>
        ServerName __your_domain__
        Redirect / https://__your_domain__/
</Virtualhost>

<IfModule mod_ssl.c>
SSLUseStapling on
SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
<VirtualHost __your_domain__:443>
    AddDefaultCharset utf-8
    ServerAdmin ADMIN@DOMAIN.HERE
    ServerName __your_domain__

	SuexecUserGroup submitty_cgi submitty_cgi

    DocumentRoot /usr/local/submitty/site/public
    ScriptAlias "/cgi-bin" "/usr/local/submitty/site/cgi-bin"
    ScriptAlias /git/ /usr/local/submitty/site/cgi-bin/git-http-backend/
    <Directory /usr/lib/git-core>
        Options +ExecCGI +SymLinksIfOwnerMatch
        AllowOverride None
        Require all granted
    </Directory>

    <Directory "/usr/local/submitty/site/cgi-bin">
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        AddHandler cgi-script .cgi
        Require host __your_domain__
        Require host __any_additional_domains__
    </Directory>

    <Location "/git">
        Require valid-user
    </Location>

    <Files "git-http-backend">
        AuthType Basic
        AuthName "Git Access"
        AuthBasicProvider wsgi
        WSGIAuthUserScript /usr/local/submitty/sbin/authentication.py
        #Require expr !(%{QUERY_STRING} -strmatch '*service=git-receive-pack*' || %{REQUEST_URI} =~ m#/git-receive-pack$#)
        Require valid-user
    </Files>

    DirectoryIndex index.html index.php index.htm index.cgi

    <FilesMatch "\.php$">
        <If "-f %{REQUEST_FILENAME}">
            SetHandler "proxy:unix:/var/run/php/php-fpm-submitty.sock|fcgi://localhost/"
        </If>
    </FilesMatch>

    # Define a matching worker.
    # The part that is matched to the SetHandler is the part that
    # follows the pipe. If you need to distinguish, "localhost; can
    # be anything unique.
    # NOTE: should match pm.max_spare_servers in
    #          /etc/php/7.2/fpm/pool.d/submitty.conf
    <Proxy "fcgi://localhost/" enablereuse=on max=30>
</Proxy>

    <Files .*>
        Order allow,deny
        Deny from all
    </Files>

    <Files *~>
        Order allow,deny
        Deny from all
    </Files>

    <Files #*>
        Order allow,deny
        Deny from all
    </Files>

        <Directory />
                Options FollowSymLinks
                AllowOverride None
        </Directory>


    ErrorLog ${APACHE_LOG_DIR}/submitty.log
    LogLevel error

    CustomLog ${APACHE_LOG_DIR}/submitty.log combined

    #   SSL Engine Switch:
    #   Enable/Disable SSL for this virtual host.
    SSLEngine on
    SSLHonorCipherOrder On

    SSLProtocol +ALL -SSLv2 -SSLv3
    SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA

    # example for real certifcates
    SSLCertificateFile	/path/to/ssl/certificate/submitty.cer
    SSLCertificateKeyFile	/path/to/ssl/certificate/submitty.key
    SSLCertificateChainFile	/path/to/ssl/certificate/chain.cer

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>

    <Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
    </Directory>

    <Directory /usr/local/submitty/site/public>
        Require all granted
        Order allow,deny
        Allow from all

        RewriteEngine On

        # If the requested filename exists, simply serve it.
        RewriteCond %{REQUEST_FILENAME} -f
        RewriteRule ^ - [L]

        # Else rewrite urls to use index.php, however we have to be aware of two
        # possible conditions of whether index.php is in the URL already or not.
        # To be backwards compatible, we want to ensure that having /index.php
        # is valid and usable. In anycase, we rewrite everything up-to /index.php
        # to be the "url" parameter of the query, and then append whatever else we
        # had in the QUERY_STRING after it.
        RewriteRule ^(.+)/index\.php$ /index.php?url=$1&%{QUERY_STRING} [NC,END]
        RewriteRule ^(.+)$ /index.php?url=$1&%{QUERY_STRING} [NC,END]

        SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1

    </Directory>

</VirtualHost>
</IfModule>
