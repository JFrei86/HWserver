"""
Automatically generate rainbow grades.

usage: python3 auto_rainbow_grades.py <semester> <course>

If the instructor chooses to supply a custom_customization.json instead of using
the web form this file will always take precedence and overwrite any customization.json
generated by the web ui.
"""

# Imports
import sys
import os
import shutil
import pwd

# Constants
RAINBOW_GRADES_PATH = '/usr/local/submitty/GIT_CHECKOUT/RainbowGrades'
COURSES_PATH = '/var/local/submitty/courses'
DEFAULT_USER = 'submitty_php'
PROVIDED_JSON_NAME = 'custom_customization.json'

# Verify correct number of command line arguments
if len(sys.argv) != 3:
    raise Exception('You must pass 2 command line arguments')

# Collect information
semester = sys.argv[1]
course = sys.argv[2]
user = DEFAULT_USER

# Verify user exists
users = pwd.getpwall()

user_found = False

for item in users:
    if user in item:
        user_found = True

if user_found is False:
    raise Exception('Unable to locate the specified user {}'.format(user))

# Generate path information
rg_course_path = os.path.join(COURSES_PATH, semester, course, 'rainbow_grades')

# Verify that customization.json or custom_customization.json exist
if os.path.exists(rg_course_path + '/customization.json') or \
        os.path.exists(rg_course_path + '/' + PROVIDED_JSON_NAME):
    pass

else:
    raise Exception('Unable to find a customization file')

# If makefile does not exist then copy and configure one from the main rainbow grades
# repo
if not os.path.exists(rg_course_path + '/Makefile'):

    # Copy Makefile from master rainbow grades directory
    # to course specific directory
    print('Copying initial files')
    shutil.copyfile(RAINBOW_GRADES_PATH + '/SAMPLE_Makefile',
                    rg_course_path + '/Makefile')

    # Setup Makefile
    print('Configuring Makefile')
    makefile_path = os.path.join(rg_course_path, 'Makefile')

    # Read in the file
    with open(makefile_path, 'r') as file:
        filedata = file.read()

    # Replace the target strings
    filedata = filedata.replace('username', user)
    filedata = filedata.replace('/<PATH_TO_SUBMITTY_REPO>/RainbowGrades',
                                RAINBOW_GRADES_PATH)
    filedata = filedata.replace('submitty.cs.rpi.edu', 'localhost')
    filedata = filedata.replace('<SEMESTER>/<COURSE>', '{}/{}'.format(semester, course))

    # Write the file out again
    with open(makefile_path, 'w') as file:
        file.write(filedata)

# Determine if the instructor has provided a custom_customization.json
# If so make a copy of that and rename as 'customization.json' so it will be used
if os.path.exists(rg_course_path + '/' + PROVIDED_JSON_NAME):

    shutil.copy(rg_course_path + '/' + PROVIDED_JSON_NAME,
                rg_course_path + '/customization.json')

# Change directory to course specific directory
os.chdir(rg_course_path)

# TODO: Tell submitty to generate grade reports

# Run make pull_test (command outputs capture in cmd_output for debugging)
print('Pulling in grade reports')
cmd_output = os.popen('make pull_test').read()
# print(cmd_output)

# Run make
print('Compiling rainbow grades')
cmd_output = os.popen('make').read()
# print(cmd_output)

# Run make push_test
print('Exporting to summary_html')
cmd_output = os.popen('make push_test').read()
# print(cmd_output)

print('Done')
