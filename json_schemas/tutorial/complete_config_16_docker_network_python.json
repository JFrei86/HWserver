{
    "autograding": {
        "compilation_to_runner": [
            "**/*.out",
            "**/*.class"
        ],
        "compilation_to_validation": [
            "test*/STDOUT*.txt",
            "test*/STDERR*.txt"
        ],
        "submission_to_compilation": [
            "**/*.cpp",
            "**/*.cxx",
            "**/*.c",
            "**/*.h",
            "**/*.hpp",
            "**/*.hxx",
            "**/*.java"
        ],
        "submission_to_runner": [
            "**/*.py",
            "**/*.pdf"
        ],
        "submission_to_validation": [
            "**/README.txt",
            "input_*.txt",
            "**/*.pdf"
        ],
        "use_checkout_subdirectory": "",
        "work_to_details": [
            "**/*.txt",
            "test01/server/STDOUT.txt",
            "test01/client/STDOUT_1.txt",
            "test01/server/STDERR.txt",
            "test01/client/STDOUT_0.txt",
            "test01/client/STDERR_0.txt",
            "test01/client/STDERR_1.txt",
            "test02/server/STDOUT.txt",
            "test02/client/STDOUT_1.txt",
            "test02/router/sequence_diagram.txt",
            "test02/server/STDERR.txt",
            "test02/client/STDOUT_0.txt",
            "test02/client/STDERR_0.txt",
            "test02/client/STDERR_1.txt",
            "test02/router/STDOUT.txt",
            "test02/router/STDERR.txt",
            "test03/server/STDOUT.txt",
            "test03/client/STDOUT_1.txt",
            "test03/router/sequence_diagram.txt",
            "test03/server/STDERR.txt",
            "test03/client/STDOUT_0.txt",
            "test03/client/STDERR_0.txt",
            "test03/client/STDERR_1.txt",
            "test03/router/STDOUT.txt",
            "test03/router/STDERR.txt",
            "test04/server/STDOUT.txt",
            "test04/client/STDOUT_1.txt",
            "test04/router/sequence_diagram.txt",
            "test04/server/STDERR.txt",
            "test04/client/STDOUT_0.txt",
            "test04/client/STDERR_0.txt",
            "test04/client/STDERR_1.txt",
            "test04/router/STDOUT.txt",
            "test04/router/STDERR.txt",
            "test05/client/STDOUT_1.txt",
            "test05/router/sequence_diagram.txt",
            "test05/server/STDOUT.txt",
            "test05/server/STDERR.txt",
            "test05/client/STDOUT_0.txt",
            "test05/client/STDERR_0.txt",
            "test05/client/STDERR_1.txt",
            "test05/router/STDOUT.txt",
            "test05/router/STDERR.txt"
        ]
    },
    "autograding_method": "docker",
    "container_options": {
        "container_image": "ubuntu:custom",
        "single_port_per_container": false,
        "use_router": true
    },
    "testcases": [
        {
            "containers": [
                {
                    "commands": [
                        "python3 server.py server"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "server",
                    "outgoing_connections": [
                        "client"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "sleep 2",
                        "python3 client.py client 0"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "client",
                    "outgoing_connections": [
                        "server"
                    ],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Ping Pong",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "server/STDOUT.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_server_output_0.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_1.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_client_output_0.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "server/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (server/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (client/STDOUT_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "python3 server.py server"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "server",
                    "outgoing_connections": [
                        "client"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "sleep 2",
                        "python3 client.py client 1"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "client",
                    "outgoing_connections": [
                        "server"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "python3 submitty_router.py"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "router",
                    "import_default_router": true,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Ping Pong, Ping Pong",
            "use_router": true,
            "validation": [
                {
                    "actual_file": "server/STDOUT.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_server_output_1.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_1.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_client_output_1.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/sequence_diagram.txt",
                    "deduction": 0,
                    "points": 0,
                    "sequence_diagram": true,
                    "show_actual": "always",
                    "show_message": "always",
                    "type": "errorIfEmpty"
                },
                {
                    "actual_file": "server/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (server/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (client/STDOUT_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (router/STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (router/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "python3 server.py server"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "server",
                    "outgoing_connections": [
                        "client"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "sleep 2",
                        "python3 client.py client 2"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "client",
                    "outgoing_connections": [
                        "server"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "python3 submitty_router.py"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "router",
                    "import_default_router": true,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Not Ping",
            "use_router": true,
            "validation": [
                {
                    "actual_file": "server/STDOUT.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_server_output_2.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_1.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_client_output_2.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/sequence_diagram.txt",
                    "deduction": 0,
                    "points": 0,
                    "sequence_diagram": true,
                    "show_actual": "always",
                    "show_message": "always",
                    "type": "errorIfEmpty"
                },
                {
                    "actual_file": "server/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (server/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (client/STDOUT_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (router/STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (router/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "python3 server.py server"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "server",
                    "outgoing_connections": [
                        "client"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "sleep 2",
                        "python3 client.py client 3"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "client",
                    "outgoing_connections": [
                        "server"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "python3 submitty_router.py"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "router",
                    "import_default_router": true,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Not Ping, Ping, Ping",
            "use_router": true,
            "validation": [
                {
                    "actual_file": "server/STDOUT.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_server_output_3.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_1.txt",
                    "deduction": 0.5,
                    "expected_file": "expected_client_output_3.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/sequence_diagram.txt",
                    "deduction": 0,
                    "points": 0,
                    "sequence_diagram": true,
                    "show_actual": "always",
                    "show_message": "always",
                    "type": "errorIfEmpty"
                },
                {
                    "actual_file": "server/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (server/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (client/STDOUT_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (router/STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (router/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "python3 server.py server udp_enabled"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "server",
                    "outgoing_connections": [
                        "client"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "sleep 2",
                        "python3 client.py client 4 udp_enabled"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "client",
                    "outgoing_connections": [
                        "server"
                    ],
                    "server": false
                },
                {
                    "commands": [
                        "python3 custom_router.py"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "router",
                    "import_default_router": true,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "extra_credit": true,
            "points": 5,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "UDP Test",
            "use_router": true,
            "validation": [
                {
                    "actual_file": "client/STDOUT_1.txt",
                    "deduction": 1,
                    "expected_file": "expected_client_output_4.txt",
                    "failure_message": "ERROR: Your code did not match the expected output.",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/sequence_diagram.txt",
                    "deduction": 0,
                    "points": 0,
                    "sequence_diagram": true,
                    "show_actual": "always",
                    "show_message": "always",
                    "type": "errorIfEmpty"
                },
                {
                    "actual_file": "server/STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (server/STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "server/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (server/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDOUT_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (client/STDOUT_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "client/STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (client/STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (router/STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "router/STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (router/STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "max_submissions": 20,
            "penalty": -0.1,
            "points": -5,
            "title": "Submission Limit",
            "type": "FileCheck"
        }
    ]
}
