{
    "autograding": {
        "compilation_to_runner": [
            "**/*.out",
            "**/*.class"
        ],
        "compilation_to_validation": [
            "test*/STDOUT*.txt",
            "test*/STDERR*.txt"
        ],
        "submission_to_compilation": [
            "**/*.cpp",
            "**/*.cxx",
            "**/*.c",
            "**/*.h",
            "**/*.hpp",
            "**/*.hxx",
            "**/*.java"
        ],
        "submission_to_runner": [
            "**/*.py",
            "**/*.pdf"
        ],
        "submission_to_validation": [
            "**/README.txt",
            "input_*.txt",
            "**/*.pdf"
        ],
        "use_checkout_subdirectory": "",
        "work_to_details": [
            "test*/*.txt",
            "test*/*_diff.json",
            "**/README.txt",
            "input_*.txt",
            "test*/input_*.txt",
            "test01/README.txt",
            "test02/STDERR.txt",
            "test02/STDOUT.txt",
            "test03/output.txt",
            "test03/STDOUT.txt",
            "test03/STDERR.txt",
            "test04/output.txt",
            "test04/STDOUT.txt",
            "test04/STDERR.txt",
            "test05/output.txt",
            "test05/STDOUT.txt",
            "test05/STDERR.txt",
            "test06/output.txt",
            "test06/STDOUT.txt",
            "test06/STDERR.txt",
            "test07/output.txt",
            "test07/STDOUT.txt",
            "test07/STDERR.txt"
        ]
    },
    "autograding_method": "jailed_sandbox",
    "container_options": {
        "container_image": "ubuntu:custom",
        "single_port_per_container": false,
        "use_router": false
    },
    "grading_parameters": {
        "AUTO_POINTS": 25,
        "EXTRA_CREDIT_POINTS": 0,
        "TA_POINTS": 0,
        "TOTAL_POINTS": 25
    },
    "testcases": [
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 2,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "README",
            "type": "FileCheck",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "README.txt",
                    "deduction": 1.0,
                    "description": "README.txt",
                    "method": "fileExists",
                    "show_actual": "always",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "clang++ -Wall -o a.out -- *.cpp"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "executable_name": "a.out",
            "points": 3,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Compilation",
            "type": "Compilation",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Compilation Errors and/or Warnings",
                    "method": "errorIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "a.out",
                    "deduction": 1.0,
                    "description": "Create Executable",
                    "method": "fileExists",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./a.out CatBreeds.txt output.txt"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "details": "./byChar.exe input.txt output.txt",
            "dispatcher_actions": [],
            "points": 4,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Regular char by char comparision",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "output.txt",
                    "comparison": "byLinebyChar",
                    "deduction": 1.0,
                    "expected_file": "inst_output.txt",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "always"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./a.out CatBreeds.txt output.txt"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "details": "./byWord.exe input.txt output.txt",
            "dispatcher_actions": [],
            "points": 4,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Test of by word comparison",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "output.txt",
                    "comparison": "byLinebyChar",
                    "deduction": 1.0,
                    "expected_file": "inst_output.txt",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "always"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./a.out CatBreeds.txt output.txt"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "details": "./byLine.exe input.txt output.txt",
            "dispatcher_actions": [],
            "points": 4,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Test of by line comparison",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "output.txt",
                    "comparison": "byLine",
                    "deduction": 1.0,
                    "expected_file": "inst_output.txt",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "always"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./a.out CatBreeds.txt output.txt"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "details": "./byLineNoWhite.exe input.txt output.txt",
            "dispatcher_actions": [],
            "points": 4,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Test of by line without whitespace comparison",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "output.txt",
                    "comparison": "byLine",
                    "deduction": 1.0,
                    "expected_file": "inst_output.txt",
                    "ignoreWhitespace": true,
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "always"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./a.out CatBreeds.txt output.txt"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "details": "./byChar.exe input.txt output.txt",
            "dispatcher_actions": [],
            "partial_credit": false,
            "points": 4,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Regular char by char comparision NO PARTIAL CREDIT",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "output.txt",
                    "comparison": "byLinebyChar",
                    "deduction": 1.0,
                    "expected_file": "inst_output.txt",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "always"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "max_submissions": 20,
            "penalty": -0.1,
            "points": -5,
            "title": "Submission Limit",
            "type": "FileCheck"
        }
    ]
}
