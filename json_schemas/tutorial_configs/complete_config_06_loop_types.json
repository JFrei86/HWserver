{
    "autograding": {
        "compilation_to_runner": [
            "**/*.out",
            "**/*.class"
        ],
        "compilation_to_validation": [
            "test*/STDOUT*.txt",
            "test*/STDERR*.txt"
        ],
        "submission_to_compilation": [
            "**/*.cpp",
            "**/*.cxx",
            "**/*.c",
            "**/*.h",
            "**/*.hpp",
            "**/*.hxx",
            "**/*.java"
        ],
        "submission_to_runner": [
            "**/*.py",
            "**/*.pdf"
        ],
        "submission_to_validation": [
            "**/README.txt",
            "input_*.txt",
            "**/*.pdf"
        ],
        "use_checkout_subdirectory": "",
        "work_to_details": [
            "test*/*.txt",
            "test*/*_diff.json",
            "**/README.txt",
            "input_*.txt",
            "test*/input_*.txt",
            "test01/STDOUT_0.txt",
            "test01/STDOUT_1.txt",
            "test01/STDERR_0.txt",
            "test01/STDERR_1.txt"
        ]
    },
    "autograding_method": "jailed_sandbox",
    "container_options": {
        "container_image": "ubuntu:custom",
        "single_port_per_container": false,
        "use_router": false
    },
    "testcases": [
        {
            "containers": [
                {
                    "commands": [
                        "submitty_count -l python node for *.py",
                        "submitty_count -l python token While *.py"
                    ],
                    "container_image": "ubuntu:custom",
                    "container_name": "container0",
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 2,
            "pre_commands": [],
            "single_port_per_container": false,
            "title": "Python - Distinguish for and while Loops",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "STDOUT_0.txt",
                    "comparison": "eq",
                    "deduction": 0.5,
                    "description": "Number of for loops",
                    "failure_message": "Must not use for loops",
                    "method": "intComparison",
                    "show_actual": "never",
                    "show_message": "on_failure",
                    "term": 0
                },
                {
                    "actual_file": "STDOUT_1.txt",
                    "comparison": "ge",
                    "deduction": 0.5,
                    "description": "Number of while loops",
                    "failure_message": "Must use a while loop",
                    "method": "intComparison",
                    "show_actual": "never",
                    "show_message": "on_failure",
                    "term": 1
                },
                {
                    "actual_file": "STDERR_0.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR_0.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR_1.txt",
                    "deduction": 0.0,
                    "description": "Standard Error (STDERR_1.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "max_submissions": 20,
            "penalty": -0.1,
            "points": -5,
            "title": "Submission Limit",
            "type": "FileCheck"
        }
    ]
}
